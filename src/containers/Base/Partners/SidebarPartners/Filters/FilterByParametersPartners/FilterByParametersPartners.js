import React from "react";import {Collapse, MenuItem, TextField} from "@material-ui/core";import InputAdornment from "@material-ui/core/InputAdornment";import {FilterSectionTitle, FilterSection, FilterSectionTitleText} from "../Styles/UseStyledFilters"import clsx from "clsx";import icon_anchor from "../../../../../../img/outdoor_furniture/filter_icons/bx-ancor.svg";import FormControl from "@material-ui/core/FormControl";import Select from "@material-ui/core/Select";import partners from "./filterFeed/partners";import {ArrowDropDown, ArrowDropUp} from "@material-ui/icons";import {makeStyles} from "@material-ui/core/styles";export default function SimpleSelect() {    const useStyles = makeStyles((theme) => ({        formControl: {            margin: theme.spacing(2),            minWidth: 220,        },        selectEmpty: {            marginTop: theme.spacing(56),        },    }));    const classes = useStyles();    const [city, setCity] = React.useState('');    const [open, setOpen] = React.useState(true);    const handleClick = () => {        setOpen(!open);    };    return (        <FilterSection>            <FilterSectionTitle onClick={handleClick}>                <FilterSectionTitleText>                    Поиск по параметрам                </FilterSectionTitleText>                {open && < ArrowDropUp/>}                {!open && <ArrowDropDown/>}            </FilterSectionTitle>            <Collapse in={open}>                <FormControl variant="outlined"                             className={classes.formControl}                >                    <Select                        value={city}                        onChange={(e) => {                            setCity(e.target.value)                        }}                        displayEmpty                        startAdornment={                            <InputAdornment position="start">                                <img src={icon_anchor} alt=""/>                            </InputAdornment>                        }                        className={clsx(classes.margin, classes.textField)}                    >                        <MenuItem value="" disabled>                            Контрагент                        </MenuItem>                        {partners.map((option) => (                            <MenuItem key={option.value} value={option.value}>                                {option.value}                            </MenuItem>                        ))}                    </Select>                </FormControl>                <TextField                    id="outlined-search"                    type="search"                    placeholder="Бренд"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />                <TextField                    id="outlined-search"                    type="search"                    placeholder="Руководитель"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />                <TextField                    id="outlined-search"                    type="search"                    placeholder="Сектор деятельности"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />            </Collapse>        </FilterSection>    );}/*export default function FilterByParametersPartners() {    const classes = useStyles();    const [state, setState] = React.useState({        checkedA: true,        checkedB: true,        checkedF: true,    });    const [open, setOpen] = React.useState(true);    const handleChangeCheck = (e) => {        setState({...state, [e.target.name]: e.target.checked});    };    const handleClick = () => {        setOpen(!open);    };    return (        <FilterSection>            <FilterSectionTitle onClick={handleClick}>                <FilterSectionTitleText>                    Поиск по параметрам                </FilterSectionTitleText>                {open && < ArrowDropUp/>}                {!open && <ArrowDropDown/>}            </FilterSectionTitle>            <Collapse in={open}>                <FormControl variant="outlined"                             className={classes.formControl}                >                    <Select                        value={district}                        onChange={(e)=>{setDistrict(e.target.value)}}                        displayEmpty                        startAdornment={                            <InputAdornment position="start">                                <img src={icon_directions} alt=""/>                            </InputAdornment>                        }                    >                        <MenuItem value="" disabled style={{color: "red"}}>                            Выберите район                        </MenuItem>                        {districts.map((option) => (                            <MenuItem key={option.value} value={option.value}>                                {option.value}                            </MenuItem>                        ))}                    </Select>                </FormControl>                <TextField                    id="outlined-search"                    type="search"                    placeholder="Бренд"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />                <TextField                    id="outlined-search"                    type="search"                    placeholder="Руководитель"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />                <TextField                    id="outlined-search"                    type="search"                    placeholder="Сектор деятельности"                    defaultValue=""                    variant="outlined"                    style={{marginBottom: 20}}                    className={clsx(classes.margin, classes.textField)}                    InputProps={{                        startAdornment: <InputAdornment position="start">                            <img src={icon_anchor} alt=""/>                        </InputAdornment>                    }}                />                {/!*<Checks>*!/}                {/!*    <FormControlLabel*!/}                {/!*        control={*!/}                {/!*            <Checkbox*!/}                {/!*                checked={state.checkedA}*!/}                {/!*                onChange={handleChangeCheck}*!/}                {/!*                name="checkedA"*!/}                {/!*                color="primary"*!/}                {/!*                size="small"*!/}                {/!*            />*!/}                {/!*        }*!/}                {/!*        label="Демонтированная конструкция"*!/}                {/!*    />*!/}                {/!*    <FormControlLabel*!/}                {/!*        control={*!/}                {/!*            <Checkbox*!/}                {/!*                checked={state.checkedB}*!/}                {/!*                onChange={handleChangeCheck}*!/}                {/!*                name="checkedB"*!/}                {/!*                color="primary"*!/}                {/!*                size="small"*!/}                {/!*            />*!/}                {/!*        }*!/}                {/!*        label="Доступная конструкция"*!/}                {/!*    />*!/}                {/!*    <FormControlLabel*!/}                {/!*        control={*!/}                {/!*            <Checkbox*!/}                {/!*                checked={state.checkedF}*!/}                {/!*                onChange={handleChangeCheck}*!/}                {/!*                name="checkedF"*!/}                {/!*                color="primary"*!/}                {/!*                size="small"*!/}                {/!*            />*!/}                {/!*        }*!/}                {/!*        label="Наличие помехи"*!/}                {/!*    />*!/}                {/!*</Checks>*!/}            </Collapse>        </FilterSection>    )}*/
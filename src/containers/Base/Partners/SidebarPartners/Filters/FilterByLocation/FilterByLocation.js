import React from 'react';import { makeStyles } from '@material-ui/core/styles';import MenuItem from '@material-ui/core/MenuItem';import FormControl from '@material-ui/core/FormControl';import Select from '@material-ui/core/Select';import cities from "./filterFeed/cities";import InputAdornment from "@material-ui/core/InputAdornment";import icon_globe from "../../../../../../img/outdoor_furniture/filter_icons/bx-globe.svg";import districts from "./filterFeed/districts";import {Collapse} from "@material-ui/core";import zips from "./filterFeed/zips";import {FilterSectionTitle, FilterSection, FilterSectionTitleText} from "../Styles/UseStyledFilters"import {ArrowDropDown, ArrowDropUp} from "@material-ui/icons";import icon_directions from "../../../../../../img/outdoor_furniture/filter_icons/bx-directions.svg";import icon_envelope from "../../../../../../img/outdoor_furniture/filter_icons/bx-envelope.svg";//// const useStyles = makeStyles(() => ({//     formControl: {//         fontFamily: "SF UI Display Light",//         marginTop: 7,//         marginBottom: 7,//         width: 220,//     },////     selectEmpty: {//         marginTop: 20//     },// }));const useStyles = makeStyles((theme) => ({    formControl: {        margin: theme.spacing(1),        minWidth: 220,    },    selectEmpty: {        marginTop: theme.spacing(2),    },}));export default function SimpleSelect() {    const classes = useStyles();    const [city, setCity] = React.useState('');    const [district, setDistrict] = React.useState('');    const [zip, setZip] = React.useState('');    const [open, setOpen] = React.useState(true);    const handleClick = () => {        setOpen(!open);    };    return (        <FilterSection>            <FilterSectionTitle                onClick={handleClick}            >                <FilterSectionTitleText>                    Поиск по местоположению                </FilterSectionTitleText>                {open && < ArrowDropUp/>}                {!open && <ArrowDropDown/>}            </FilterSectionTitle>            <Collapse in={open} >            <FormControl variant="outlined"                         className={classes.formControl}            >                <Select                    value={city}                    onChange={(e)=>{setCity(e.target.value)}}                    displayEmpty                    startAdornment={                        <InputAdornment position="end">                            <img src={icon_globe} alt=""/>                        </InputAdornment>                    }                >                    <MenuItem value="" disabled>                        Выберите город                    </MenuItem>                    {cities.map((option) => (                        <MenuItem key={option.value} value={option.value}>                            {option.value}                        </MenuItem>                    ))}                </Select>            </FormControl>            <FormControl variant="outlined"                         className={classes.formControl}            >                <Select                    value={district}                    onChange={(e)=>{setDistrict(e.target.value)}}                    displayEmpty                    startAdornment={                        <InputAdornment position="start">                            <img src={icon_directions} alt=""/>                        </InputAdornment>                    }                >                    <MenuItem value="" disabled style={{color: "red"}}>                        Выберите район                    </MenuItem>                    {districts.map((option) => (                        <MenuItem key={option.value} value={option.value}>                            {option.value}                        </MenuItem>                    ))}                </Select>            </FormControl>            <FormControl variant="outlined"                         className={classes.formControl}            >                <Select                    value={zip}                    onChange={(e)=>{setZip(e.target.value)}}                    displayEmpty                    startAdornment={                        <InputAdornment position="start">                            <img src={icon_envelope} alt=""/>                        </InputAdornment>                    }                >                    <MenuItem value="" disabled>                        Выберите индекс                    </MenuItem>                    {zips.map((option) => (                        <MenuItem key={option.value} value={option.value}>                            {option.value}                        </MenuItem>                    ))}                </Select>            </FormControl>            </Collapse>        </FilterSection>    );}
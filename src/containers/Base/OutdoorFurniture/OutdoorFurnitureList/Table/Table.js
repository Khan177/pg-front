import React from 'react'import styled from 'styled-components'import {useTable} from 'react-table'import "./../../../../../assets/fonts/sf-ui-display-cufonfonts-webfont/style.css"const StyledTable = styled.div`  padding: 1rem;  table {    border-spacing: 0;    border: 1px solid #D3DFF0;        tr {            :last-child {        td {          border-bottom: 0;        }      }      :nth-child(even) {        background-color: #F5F7FA;    }    th,    td {      margin: 0;      padding: 0 15px;      text-align: left;      vertical-align: middle;      height: 44px;      border: 1px solid #d7e7ec;      color: #1A1A1A;      font-family: "SF UI Display Light", sans-serif;      font-weight: 400;      font-size: 14px;      line-height: 16px;      white-space: nowrap;      overflow: hidden;      text-overflow: ellipsis;      :last-child {        border-right: 0;      }    }  }`function Table() {    const data = React.useMemo(        () => [            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },            {                col1: '204845847',                col2: 'Алматы',                col3: '101001',                col4: 'Пр. Достык д. 25',                col5: 'Пр. Достык д. 25',                col6: 'Сениер',                col7: '43.252502°76.953135°',                col8: 'Да',            },        ],        []    )    const columns = React.useMemo(        () => [            {                Header: 'Код',                accessor: 'col1', // accessor is the "key" in the data            },            {                Header: 'Город',                accessor: 'col2',            },            {                Header: 'Почтовый индекс',                accessor: 'col3',            },            {                Header: 'Адрес маркетинговый',                accessor: 'col4',            },            {                Header: 'Адрес юридический',                accessor: 'col5',            },            {                Header: 'Формат',                accessor: 'col6',            },            {                Header: 'Координаты',                accessor: 'col7',            },            {                Header: 'Горит',                accessor: 'col8',            },            {                Header: '',                accessor: 'col9',            },        ],        []    )    const {        getTableProps,        getTableBodyProps,        headerGroups,        rows,        prepareRow,        selectedFlatRows,        state: {selectedRowIds},    } = useTable(        {            columns,            data,        },    )    return (        <StyledTable>            <table {...getTableProps()}>                <thead>                {headerGroups.map(headerGroup => (                    <tr {...headerGroup.getHeaderGroupProps()}>                        {headerGroup.headers.map(column => (                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>                        ))}                    </tr>                ))}                </thead>                <tbody {...getTableBodyProps()}>                {rows.slice(0, 10).map((row, i) => {                    prepareRow(row)                    return (                        <tr {...row.getRowProps()}>                            {row.cells.map(cell => {                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>                            })}                        </tr>                    )                })}                </tbody>            </table>        </StyledTable>    )}export default Table;